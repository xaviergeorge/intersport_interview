import { createSlice, PayloadAction } from '@reduxjs/toolkit';

/**
 * Represents the state of the user in the Redux store.
 */
interface UserState {
  isLoggedIn: boolean;
  username: string;
  userId: string;
}

/**
 * The initial state of the user slice.
 */
const initialState: UserState = {
  isLoggedIn: false,
  username: '',
  userId: '',
};

/**
 * Create a Redux slice for user-related actions and state.
 */
const userSlice = createSlice({
  name: 'user', // Slice name
  initialState, // Initial state
  reducers: {
    /**
     * Action to log in a user.
     * @param {UserState} state - The current user state.
     * @param {PayloadAction<{ username: string; userId: string }>} action - The action containing username and userId.
     */
    login: (state, action: PayloadAction<{ username: string; userId: string }>) => {
      state.isLoggedIn = true;
      state.username = action.payload.username;
      state.userId = action.payload.userId;
    },
    /**
     * Action to log out a user.
     * @param {UserState} state - The current user state.
     */
    logout: (state) => {
      state.isLoggedIn = false;
      state.username = '';
      state.userId = '';
    },
  },
});

/**
 * Export the actions generated by the user slice.
 */
export const { login, logout } = userSlice.actions;

/**
 * Export the user slice reducer.
 */
export default userSlice.reducer;
